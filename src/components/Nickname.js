import React, { useState } from "react"; import CryptoJS from "crypto-js"; import { scoreApi } from "../api.js"; import Score from "../components/Score"; const atobDecode = (str) => atob(str); const Nickname = ({ department, setReOpen }) => { const [isOpen, setIsOpen] = useState(true); const [nickname, setNickname] = useState(""); const [similarity, setSimilarity] = useState(0); const JUJIMAE = (() => atobDecode("YzY5ZDZlNWRmYWM1NGNmNGE3Y2I4ZjkxMmI3MWE2ZWI1ZGY4YzhhN2M5ZjI4ZjNhODg5MzlmNmYxYTdkMWM5ZA=="))(); const handleSimilarityChange = (val) => { setSimilarity(val) }; const handleConfirm = async () => { if (nickname.length < 1 || nickname.length > 8) { alert("닉네임은 1~8글자로 입력해주세요."); return } try { const simStr = similarity.toFixed(2).toString(); const encryptedSimilarity = CryptoJS.AES.encrypt(simStr, JUJIMAE).toString(); const decryptedSimilarity = Number(CryptoJS.AES.decrypt(encryptedSimilarity, JUJIMAE).toString(CryptoJS.enc.Utf8)); await scoreApi.submitScore(nickname, department, encryptedSimilarity); alert("리더보드에 점수가 등록되었습니다!"); setReOpen(true) } catch (error) { alert("점수 등록에 실패했습니다. 다시 시도해주세요." + error) } setIsOpen(false) }; const handleSkip = () => { setIsOpen(false) }; if (!isOpen) return null; return React.createElement("div", { className: "modal-overlay", style: { zIndex: 1 } }, React.createElement("div", { className: "nickname-container" }, React.createElement("span", { className: "nickname-text bold", style: { marginTop: 20 } }, "리더보드에 남길 닉네임을 입력해주세요."), React.createElement(Score, { onSimilarityChange: handleSimilarityChange, isShown: false }), React.createElement("input", { className: "nickname-input", placeholder: "1~8글자로 입력해주세요.", value: nickname, onChange: (e) => setNickname(e.target.value) }), React.createElement("button", { className: "main-button lightgreen", style: { marginBottom: 5 }, onClick: handleConfirm }, "확인"), React.createElement("button", { className: "main-button darkgreen", style: { marginBottom: 20 }, onClick: handleSkip }, "저장 없이 넘어가기"), React.createElement("span", { className: "how-calc-text", style: { marginBottom: 20, marginTop: -5, fontSize: 10, letterSpacing: -0.1 } }, "* 첫 저장 시 서버를 불러오느라 시간이 오래 걸릴 수 있습니다. *", React.createElement("br", null), "조금만 기다려주세요. (30초 ~ 1분)"))) }; export default Nickname;
